
import React, { useEffect, useState } from 'react';
import TextField from '@mui/material/TextField';
import Autocomplete from '@mui/material/Autocomplete';
import { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';
import { Pie } from 'react-chartjs-2';
ChartJS.register(ArcElement, Tooltip, Legend);

const Dashboard = () => {
	const [data, setData] = useState([]);
	const [organizationStats, setOrganizationStats] = useState(null);
	const [chartData, setChartData] = useState(null);
	const url = 'http://localhost:8080/getorganizations';

	useEffect(() => {
	fetch(url)
		.then(response => response.json())
		.then(data => {
		console.log(data);
		setData(data);
		})
		.catch(error => {
		console.error('Error:', error);
		});
	}, []);

	const getOrganizationStats = (organizationName) => {
		const organizationLookupURL = `http://localhost:8080/getorganizationstats?organization=${organizationName}`;
		fetch(organizationLookupURL)
		.then(response => response.json())
		.then(data => {
			const recipients = data.recipients;
			const recipientsScammed = data.recipients_scammed;
			const recipientsNotScammed = recipients - recipientsScammed;

			const chartData = {
				labels: ['Scammed', 'Not Scammed'],
				datasets: [
					{
					label: "Portion of recipients scammed",
					data: [recipientsScammed, recipientsNotScammed],
					backgroundColor: ['#FF6384', '#36A2EB'],
					hoverBackgroundColor: ['#FF6384', '#36A2EB'],
					borderWidth: 0,
					},
				],
			};

			setOrganizationStats(data);
			setChartData(chartData);
		})
		.catch(error => {
			console.error('Error:', error);
		});
	};

	return (
		<div>
		<h1>Dashboard</h1>
		<div>
			<Autocomplete
			disablePortal
			id="organization_autocomplete"
			options={data}
			sx={{ width: 300 }}
			renderInput={(params) => <TextField {...params} label="Organization" />}
			onChange={(event, value) => getOrganizationStats(value)}
			/>
		</div>
		{organizationStats && (
			
			<div style={{width: "400px"}}>
			<Pie data={chartData} />
			</div>
		)}
		</div>
	);
};

export default Dashboard;


