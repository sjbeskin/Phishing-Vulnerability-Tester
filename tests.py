import unittest
from sqlconnector import SQLConnector, Recipient


#sqlconn = SQLConnector()
#sqlconn.add_recipients([Recipient("a@a.com", "mewhenimdriving")])
#print(sqlconn.get_recipient("tejesh.anand@hotmail.com"))


class TestSQLConnectorMethods(unittest.TestCase):

    def setUp(self):
        #Runs each time before a test
        self.sqlconn = SQLConnector(testing_mode=True)
    
    def test_db_creation(self):
        #Check the db exists and has nothing in it
        pass

    def test_add_recipient(self):
        pass
    def test_get_organization(self):
        self.sqlconn.add_recipients([Recipient("te@jesh.com", "crackheadincorporated")])
        user = self.sqlconn.get_recipient("te@jesh.com")
        self.assertEqual(user[2], "crackheadincorporated")

    def test_get_clicks(self):
        self.sqlconn.add_recipients([Recipient("te@jesh.com", "crackheadincorporated")])
        user = self.sqlconn.get_recipient("te@jesh.com")
        self.assertEqual(user[3], 0)

    def test_add_clicks(self):
        self.sqlconn.add_recipients([Recipient("te@jesh.com", "crackheadincorporated")])
        user = self.sqlconn.get_recipient("te@jesh.com")
        self.sqlconn.register_recipient_scam_click(user[0])
        self.sqlconn.register_recipient_scam_click(user[0])
        self.sqlconn.register_recipient_scam_click(user[0])
        user = self.sqlconn.get_recipient("te@jesh.com")
        self.assertEqual(user[3], 3)

if __name__ == '__main__':
    unittest.main()