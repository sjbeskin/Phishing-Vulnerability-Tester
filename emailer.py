import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import os
import time
import random


def main():
    #finding the current path to get local files
    __location__ = os.path.realpath(
    os.path.join(os.getcwd(), os.path.dirname(__file__)))

    #taking all the necessary information for sending emails
    subject = ''
    body_text = ''
    body_html = ''
    with open(os.path.join(__location__, 'Email Database\\TestResult.txt')) as f:
        subject = f.readline()
        body_text = f.readline()
        body_html = f.read()
    sender = ''
    password = ''

    #reading the sender, password, and recipient information from files
    with open(os.path.join(__location__, 'password.txt')) as f:
        sender = f.readline().strip()
        password = f.readline().strip()
    recipients = []
    with open(os.path.join(__location__, 'emaillist.txt')) as f:
        recipients = f.read().splitlines()

    #creates a dictionary of all emails corresponding to the user's name
    rec_dict = {}
    for i in recipients:
        pair = i.split(', ')
        rec_dict[pair[1]] = pair[0]

    #waiting a random time between 22 and 26 hours before sending an email
    # wait_time = random.randint(79200, 93600)
    # time.sleep(wait_time)
    for rec_email, rec_name in rec_dict.items():
        send_email(subject, body_text, body_html, sender, rec_email, rec_name, password)

#sends the email using the gathered information
def send_email(subject, body_text, body_html, sender, rec_email, rec_name, password):
    msg = MIMEMultipart('alternative')
    msg['Subject'] = subject
    msg['From'] = 'Totally Real Test Results'
    msg['To'] = rec_email

    #formats the email with the user's first name
    body_text = body_text.format(rec_name.split()[0])
    body_html = body_html.format(rec_name.split()[0])

    #assembles the email contents
    part1 = MIMEText(body_text, 'plain')
    part2 = MIMEText(body_html, 'html')

    msg.attach(part1)
    msg.attach(part2)

    #send the emails
    with smtplib.SMTP_SSL('smtp.gmail.com', 465) as smtp_server:
       smtp_server.login(sender, password)
       smtp_server.sendmail(sender, rec_email, msg.as_string())
    print("Message sent!")


if __name__ == '__main__':
    main()

